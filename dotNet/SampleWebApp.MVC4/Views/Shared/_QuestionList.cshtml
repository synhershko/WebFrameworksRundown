@using SampleWebApp.Common
@model IEnumerable<SampleWebApp.Common.Models.Question>
           
@if (Model == null || !Model.Any())
{
    <p>No questions have been asked.</p>
}
else
{
    foreach (var question in Model)
    { 
        {
            var totalVote = question.UpVoteCount - question.DownVoteCount;
        }
        <div class="question-summary narrow">
            <div class="votes">
                <div class="mini-counts">@totalVote</div>
                <div>votes</div>
            </div>

            <div class="status unanswered">
                <div class="mini-counts">@question.Answers.ToSimplifiedNumberText()</div>
                <div>answers</div>

            </div>

            <div class="views">
                <div class="mini-counts">@question.ViewsCount.ToSimplifiedNumberText()</div>
                <div>views</div>
            </div>

            <div class="summary">
                <h3><a href="@Url.Action("View", "Questions", new { id = @question.Id.Substring(question.Id.IndexOf('/') + 1) })" class="question-hyperlink" title="@question.Content">@question.Subject</a></h3>

                @Html.Partial("_QuestionTagList", question.Tags)
                

                <div class="started">
                    <span title="@question.CreatedOn" class="relativetime">@question.CreatedOn.DateTime.ToShortDateString()&nbsp;@question.CreatedOn.DateTime.ToShortTimeString()</span>
                    <a href="#">@question.CreatedBy</a>
                    <span class="reputation-score" title="reputation score">0</span>
                </div>
            </div>
        </div>
    }
}
           
